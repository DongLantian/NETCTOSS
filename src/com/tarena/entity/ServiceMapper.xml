<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.tarena.dao.ServiceDao">

	<!-- 查询某一页数据 -->
	<select id="findByPage" parameterType="com.tarena.entity.page.ServicePage" 
			resultType="java.util.HashMap" >
		SELECT * FROM (
		SELECT s.*,ROWNUM r FROM (
			SELECT s.* , a.idcard_no , a.real_name , c.name AS cost_name ,c.descr
			FROM service s INNER JOIN account a ON a.account_id = s.account_id
			INNER JOIN cost c ON c.cost_id = s.cost_id
			<where>
				<if test="os_username!=null &amp;&amp; os_username.length()>0">
					AND s.os_username=#{os_username,jdbcType=VARCHAR}
				</if>
				<if test="unix_host!=null &amp;&amp; unix_host.length()>0">
					AND s.unix_host=#{unix_host,jdbcType=VARCHAR}
				</if>
				<if test="idcard_no!=null &amp;&amp; idcard_no.length()>0">
					AND a.idcard_no=#{idcard_no,jdbcType=VARCHAR}
				</if>
				<if test="status!=null &amp;&amp; status.length()>0  &amp;&amp; !status.equals('-1')">
					AND s.status=#{status,jdbcType=VARCHAR}
				</if>
			</where>
			ORDER BY s.service_id
		) s
	) WHERE r&lt;#{end} AND r>#{begin}			
	</select>
	
	<!-- 查询总行数 -->
	<select id="findRows" parameterType="com.tarena.entity.page.ServicePage" resultType="java.lang.Integer" >
		SELECT COUNT(*) FROM (
		SELECT s.*,ROWNUM r FROM (
			SELECT s.* , a.idcard_no , a.real_name , c.name AS cost_name ,c.descr
			FROM service s INNER JOIN account a ON a.account_id = s.account_id
			INNER JOIN cost c ON c.cost_id = s.cost_id
			<where>
				<if test="os_username!=null &amp;&amp; os_username.length()>0">
					AND s.os_username=#{os_username,jdbcType=VARCHAR}
				</if>
				<if test="unix_host!=null &amp;&amp; unix_host.length()>0">
					AND s.unix_host=#{unix_host,jdbcType=VARCHAR}
				</if>
				<if test="idcard_no!=null &amp;&amp; idcard_no.length()>0">
					AND a.idcard_no=#{idcard_no,jdbcType=VARCHAR}
				</if>
				<if test="status!=null &amp;&amp; status.length()>0  &amp;&amp; !status.equals('-1')">
					AND s.status=#{status,jdbcType=VARCHAR}
				</if>
			</where>
			ORDER BY s.service_id
			) s )
	</select>

	<!-- 开通业务账号 -->
	<update id="start" parameterType="java.lang.Integer">
		UPDATE service SET status = '0' , pause_date=null WHERE service_id = #{id,jdbcType=NUMERIC}
	</update>
	
	<!-- 暂停业务账号 -->
	<update id="pause" parameterType="java.lang.Integer">
		UPDATE service SET status = '1' , pause_date=SYSDATE WHERE service_id = #{id,jdbcType=NUMERIC}
	</update>
	<!-- 暂停账务账号下的所有业务账号 -->
	<update id="pauseByAccountID" parameterType="java.lang.Integer">
		UPDATE service SET status = '1' , pause_date=SYSDATE WHERE account_id = #{account_id,jdbcType=NUMERIC}
	</update>
	
	<!-- 删除业务 -->
	<update id="delete" parameterType="java.lang.Integer">
		UPDATE service SET status = '2' , close_date=SYSDATE WHERE service_id = #{id,jdbcType=NUMERIC}
	</update>
	<!-- 删除账务账号下的所有业务账号 -->
	<update id="deleteByAccountID" parameterType="java.lang.Integer">
		UPDATE service SET status = '2' , pause_date=SYSDATE WHERE account_id = #{account_id,jdbcType=NUMERIC}
	</update>
	
	<!-- 根据ID查找单条信息 -->
	<select id="findById" parameterType="java.lang.Integer" resultType="java.util.HashMap">
		SELECT s.* , a.idcard_no , a.real_name , c.name AS cost_name ,c.descr
			FROM service s INNER JOIN account a ON a.account_id = s.account_id
			INNER JOIN cost c ON c.cost_id = s.cost_id WHERE s.service_id = #{id,jdbcType=NUMERIC}
	</select>
	
	<!-- 查找已有的数据更新 -->
	<select id="findUpdate" parameterType="java.lang.Integer" resultType="java.util.HashMap">
		SELECT * FROM service_update_bak WHERE service_id = #{service_id,jdbcType=NUMERIC}
	</select>
	
	<!-- 删除已有数据更新 -->
	<delete id="deleteUpdate" parameterType="java.lang.Integer" >
		DELETE FROM service_update_bak WHERE service_id = #{service_id,jdbcType=NUMERIC}
	</delete>
	
	<!-- 更新业务账号数据 ，向更新表中插入-->
	<insert id="update" parameterType="com.tarena.entity.Service">
		INSERT INTO service_update_bak VALUES(service_bak_seq.nextval , #{service_id,jdbcType=NUMERIC} , #{cost_id,jdbcType=NUMERIC})
	</insert>
	
	<!-- 添加新的业务账号 -->
	<insert id="add" parameterType="com.tarena.entity.Service" >
		INSERT INTO service  VALUES(service_seq.nextval , #{account_id,jdbcType=NUMERIC},#{unix_host,jdbcType=VARCHAR},#{os_username,jdbcType=VARCHAR},
		 #{login_password,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR},#{create_date,jdbcType=TIMESTAMP},#{pause_date,jdbcType=TIMESTAMP},
		 #{close_date,jdbcType=TIMESTAMP},#{cost_id,jdbcType=NUMERIC})
	</insert>

</mapper>